#
.DEFAULT_GOAL := help

.PHONY: help default

# help is defined in
# https://gist.github.com/rcmachado/af3db315e31383502660
help:
	$(info --------------------------------------- )	
	$(info Make Targets)
	$(info --------------------------------------- )
	$(QUIET) awk '/^[a-zA-Z\\-\\_0-9]+:/ {          \
	  nb = sub( /^## /, "", helpMsg );              \
	  if(nb == 0) {                                 \
	    helpMsg = $$0;                              \
	    nb = sub( /^[^:]*:.* ## /, "", helpMsg );   \
	  }                                             \
	  if (nb)                                       \
	    print  $$1 "\t" helpMsg;                    \
	}                                               \
	{ helpMsg = $$0 }'                              \
	$(MAKEFILE_LIST) | column -ts:

default: help

.PHONY: init clone update deinit distclean checkout srcupdate
## Clone and update Source
init: clone update

# gitclone use '-C' option, so git version should be more than 1.8.5. CentOS7 git is imcompatiable.
#
clone:
	$(call gitclone,$(SRC_GITURL),$(SRC_PATH),$(SRC_TAG))

update:
	$(QUIET)cd $(SRC_PATH) && git submodule update --init ./

checkout:
	$(QUIET)cd $(SRC_PATH) && git checkout $(SRC_TAG)

srcupdate: checkout update

deinit: distclean

## Clean
distclean:
	$(call distclean, $(SRC_PATH))

.PHONY: info.ant clean.ant  build.ant copy.sitespecific mkdir.wars

## Ant and Java
info.ant:
	$(QUIET)echo "-------------------------------------------------------------"
	$(QUIET)echo ">>> Ant  information"
	$(QUIET)echo "Ant : $(ANT_PATH)/ant"
	$(QUIET)$(ANT_PATH)/ant -version
	$(QUIET)echo "-------------------------------------------------------------"
	$(QUIET)echo ">>> JAVA information"
	$(QUIET)echo "JAVA : $(JAVA_PATH)/java"
	$(QUIET)$(JAVA_PATH)/java -version
	$(QUIET)echo "-------------------------------------------------------------"

## Clean
clean.ant: info.ant
	cd $(SRC_PATH) && JAVA_HOME=$(JAVA_HOME) $(ANT_CMD) $(ANT_OPTS) clean && cd ..

## Build
build.ant: info.ant copy.sitespecific | mkdir.wars
	cd $(SRC_PATH) && JAVA_HOME=$(JAVA_HOME) $(ANT_CMD) $(ANT_OPTS) && cd ..

build.gradle: copy.sitespecific | mkdir.wars
	cd $(SRC_PATH) 
	ARCHAPPL_SITEID=$(ARCHAPPL_SITEID) $(SRC_PATH)/gradlew -b $(SRC_PATH)/build.gradle assemble 
	mv $(SRC_PATH)/build/libs/mgmt.war $(ARCHAPPL_WARS_TARGET_PATH)
	mv $(SRC_PATH)/build/libs/engine.war $(ARCHAPPL_WARS_TARGET_PATH)
	mv $(SRC_PATH)/build/libs/etl.war $(ARCHAPPL_WARS_TARGET_PATH)
	mv $(SRC_PATH)/build/libs/retrieval.war $(ARCHAPPL_WARS_TARGET_PATH)
	cd ..

## Site Build
build.site: info.ant copy.sitespecific | mkdir.wars
	cd $(SRC_PATH) && JAVA_HOME=$(JAVA_HOME) $(ANT_CMD) $(ANT_OPTS) sitespecificbuild && cd ..

copy.sitespecific: | FORCE
	$(QUIET)echo "-------------------------------------------------------------"
	$(QUIET)echo ">>> We are copying the site specific source to  $(ARCHAPPL_SITEID_TARGET_PATH)"
	rm -rf $(ARCHAPPL_SITEID_TARGET_PATH)
	$(QUIET)cp -rf $(ARCHAPPL_SITEID_TEMPATE_PATH) $(ARCHAPPL_SITEID_TARGET_PATH)
	$(QUIET)echo "-------------------------------------------------------------"


mkdir.wars:
	@mkdir -p $(ARCHAPPL_WARS_TARGET_PATH)

.PHONY: conf build


## Conf and Build
build: conf build.ant

## Configuration
conf: conf.archapplproperties conf.storage

